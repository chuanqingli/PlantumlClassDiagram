@startuml

' =========== AbstractTest =========== 
abstract class AbstractTest{ 
    next : AbstractTest
    value : Integer
} 
dep.TestClass<|--AbstractTest
dep.TestInterface<|..AbstractTest
dep.TestInterface2<|..AbstractTest


' =========== Test =========== 
class Test{ 
    next : Test
    next2 : Test2
    value : Integer
    void hello()
} 
dep.TestClass<|--Test
dep.TestInterface<|..Test
dep.TestInterface2<|..Test
Test*..Test2
Test+--InnerClass
Test+--InnerClass2


' =========== InnerClass =========== 
class InnerClass{ 
    innerValue : int
} 


' =========== InnerClass2 =========== 
class InnerClass2{ 
    innerValue : int
} 


' =========== Test2 =========== 
class Test2{ 
    next : Test2
    value : Integer
} 
dep.TestClass<|--Test2
dep.TestInterface<|..Test2


' =========== TestEnum =========== 
enum TestEnum{ 
    A : TestEnum
    B : TestEnum
    C : TestEnum
    D : TestEnum
} 


' =========== dep.TestClass =========== 
class dep.TestClass{ 
} 


' =========== dep.TestInterface =========== 
interface dep.TestInterface{ 
} 


' =========== dep.TestInterface2 =========== 
interface dep.TestInterface2{ 
} 

@enduml
