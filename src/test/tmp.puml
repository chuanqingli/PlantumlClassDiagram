@startuml

' =========== AbstractTest =========== 
abstract class AbstractTest{ 
    void func3()
} 
dep.TestInterface<|.. AbstractTest
dep.TestInterface2<|.. AbstractTest


' =========== Test =========== 
class Test{ 
    atomicBoolean : AtomicBoolean
    testEnum : TestEnum
    void func3()
    void func()
    void func2()
} 
AbstractTest<|-- Test
Test*.. TestEnum
Test+-- InnerClass
Test+-- InnerClass2


' =========== InnerClass =========== 
class InnerClass{ 
    innerValue : int
} 


' =========== InnerClass2 =========== 
class InnerClass2{ 
    innerValue : int
} 


' =========== Test2 =========== 
class Test2{ 
    void func3()
    void func()
    void func2()
} 
AbstractTest<|-- Test2


' =========== Test3 =========== 
class Test3{ 
} 


' =========== TestEnum =========== 
enum TestEnum{ 
    A : TestEnum
    B : TestEnum
    C : TestEnum
    D : TestEnum
} 


' =========== dep.TestInterface =========== 
interface dep.TestInterface{ 
    void func()
} 


' =========== dep.TestInterface2 =========== 
interface dep.TestInterface2{ 
    void func2()
} 

@enduml
